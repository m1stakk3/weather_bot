from geopy import geocoders
import requests as req
import json
import urllib3

urllib3.disable_warnings()


CONDITIONS = {'clear': '—è—Å–Ω–æ', 'partly-cloudy': '–º–∞–ª–æ–æ–±–ª–∞—á–Ω–æ', 'cloudy': '–æ–±–ª–∞—á–Ω–æ —Å –ø—Ä–æ—è—Å–Ω–µ–Ω–∏—è–º–∏',
              'overcast': '–ø–∞—Å–º—É—Ä–Ω–æ', 'drizzle': '–º–æ—Ä–æ—Å—å', 'light-rain': '–Ω–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å',
              'rain': '–¥–æ–∂–¥—å', 'moderate-rain': '—É–º–µ—Ä–µ–Ω–Ω–æ —Å–∏–ª—å–Ω—ã–π', 'heavy-rain': '—Å–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å',
              'continuous-heavy-rain': '–¥–ª–∏—Ç–µ–ª—å–Ω—ã–π —Å–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å', 'showers': '–ª–∏–≤–µ–Ω—å',
              'wet-snow': '–¥–æ–∂–¥—å —Å–æ —Å–Ω–µ–≥–æ–º', 'light-snow': '–Ω–µ–±–æ–ª—å—à–æ–π —Å–Ω–µ–≥', 'snow': '—Å–Ω–µ–≥',
              'snow-showers': '—Å–Ω–µ–≥–æ–ø–∞–¥', 'hail': '–≥—Ä–∞–¥', 'thunderstorm': '–≥—Ä–æ–∑–∞',
              'thunderstorm-with-rain': '–¥–æ–∂–¥—å —Å –≥—Ä–æ–∑–æ–π', 'thunderstorm-with-hail': '–≥—Ä–æ–∑–∞ —Å –≥—Ä–∞–¥–æ–º'
              }
WIND_DIRECTION = {'nw': '—Å–µ–≤–µ—Ä–æ-–∑–∞–ø–∞–¥–Ω–æ–µ', 'n': '—Å–µ–≤–µ—Ä–Ω–æ–µ', 'ne': '—Å–µ–≤–µ—Ä–æ-–≤–æ—Å—Ç–æ—á–Ω–æ–µ', 'e': '–≤–æ—Å—Ç–æ—á–Ω–æ–µ',
                  'se': '—é–≥–æ-–≤–æ—Å—Ç–æ—á–Ω–æ–µ', 's': '—é–∂–Ω–æ–µ', 'sw': '—é–≥–æ-–∑–∞–ø–∞–¥–Ω–æ–µ', 'w': '–∑–∞–ø–∞–¥–Ω–æ–µ', '—Å': '—à—Ç–∏–ª—å'
                  }
DAY_PART = {"night": "üåë –ù–æ—á—å—é", "morning": "üå§Ô∏è –£—Ç—Ä–æ–º",
            "day": "‚òÄÔ∏è –î–Ω–µ–º", "evening": "üåô –í–µ—á–µ—Ä–æ–º"
            }


class Weather:

    def __init__(self, city: str, api_key: str):
        """
        –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —à–∏—Ä–æ—Ç—ã –∏ –¥–æ–ª–≥–æ—Ç—ã
        """
        geolcator = geocoders.Nominatim(user_agent='bot')
        self.city = city
        self.lat = str(geolcator.geocode(city).latitude)
        self.lon = str(geolcator.geocode(city).longitude)
        self.api_key = api_key

    def next_six_hours(self):
        """
        –í–æ–∑–≤—Ä–∞—Ç –ø–æ–≥–æ–¥—ã –≤ —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è —Å—É—Ç–æ–∫ (–Ω–æ—á—å, —É—Ç—Ä–æ, –¥–µ–Ω—å, –≤–µ—á–µ—Ä)
        """
        weather = self.__parse_weather()
        weather = weather['forecast']['parts'][0]
        answer = f"{DAY_PART[weather['part_name']]} —Å—Ä–µ–¥–Ω—è—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ {weather['temp_avg']}\n" \
                 f"üí® –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ {weather['wind_speed']} –º/—Å, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ {WIND_DIRECTION[weather['wind_dir']]}"
        return answer

    def now(self):
        """
        –í–æ–∑–≤—Ä–∞—Ç —Ç–µ–∫—É—â–µ–π –ø–æ–≥–æ–¥—ã
        """
        weather = self.__parse_weather()
        weather = weather['fact']
        answer = f"üåç –í –≥. {self.city} —Å–µ–π—á–∞—Å {CONDITIONS[weather['condition']]}\n" \
                 f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞ {weather['temp']} (–æ—â—É—â. {weather['feels_like']})\n" \
                 f"üí¶ –í–ª–∞–∂–Ω–æ—Å—Ç—å {weather['humidity']}%\n" \
                 f"üí® –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ {weather['wind_speed']} –º/—Å, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ {WIND_DIRECTION[weather['wind_dir']]}"
        return answer

    def __parse_weather(self):
        """
        –û–±—Ä–∞—â–µ–Ω–∏–µ –ø–æ API –∫ –Ø–Ω–¥–µ–∫—Å –ü–æ–≥–æ–¥–µ –∏ —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—è JSON
        """
        url_yandex = f'https://api.weather.yandex.ru/v2/informers?lat={self.lat}&lon={self.lon}&[lang=ru_RU]&limit=1&hours=true'
        yandex_req = req.get(url_yandex, headers={'X-Yandex-API-Key': self.api_key}, verify=False)
        yandex_json = json.loads(yandex_req.text)
        return yandex_json

